<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Home - Shelved</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #121212;
            color: #f5f5f5;
        }

        .hero {
            text-align: center;
            padding: 50px 20px;
            background-color: #1e1e1e;
            border-bottom: 1px solid #333;
        }

        .hero h1 {
            font-size: 3em;
            color: #ff9800;
            margin: 0;
        }

        .hero p {
            font-size: 1.5em;
            color: #bbb;
            margin: 10px 0 0;
        }

        .content {
            padding-top: 20px;
        }

        h1 {
            font-size: 2.5em;
            color: #ff9800;
            margin-top: 20px;
            margin-bottom: 10px;
            font-weight: 700;
        }

        h1 span {
            color: #ff9800;
        }

        .container {
            display: grid;
            gap: 20px;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            padding: 20px;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .modal-content {
            background-color: #1e1e1e;
            color: #f5f5f5;
            padding: 30px;
            border-radius: 12px;
            max-width: 400px;
            width: 90%;
            text-align: center;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.6);
            animation: fadeIn 0.3s ease-in-out;
        }

        .shelf-option {
            cursor: pointer;
            padding: 12px 16px;
            border: 1px solid #444;
            border-radius: 8px;
            margin-top: 10px;
            background-color: #2c2c2c;
            color: #f5f5f5;
            transition: background-color 0.2s ease, transform 0.2s ease;
        }

        .shelf-option:hover {
            background-color: #444;
            transform: scale(1.05);
        }

        button {
            background-color: #ff9800;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            font-size: 1em;
            cursor: pointer;
            margin-top: 20px;
            transition: background-color 0.2s ease, transform 0.2s ease;
        }

        button:hover {
            background-color: #e68a00;
            transform: scale(1.05);
        }

        button:active {
            background-color: #cc7700;
            transform: scale(0.95);
        }

        button.cancel-btn {
            background-color: #e74c3c;
            margin-left: 10px;
        }

        button.cancel-btn:hover {
            background-color: #c0392b;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: scale(0.9);
            }
            to {
                opacity: 1;
                transform: scale(1);
            }
        }
    </style>
</head>
<body>
    <%- include('navbar', { username: username }) %>

    <div class="main-content">
        <div class="hero">
            <h1>Shelved</h1>
            <p>Log all of your media, in one place</p>
        </div>

        <div class="content">
                <h1>Welcome, <span style="color:#8ecae6;"><%= username %></span>!</h1>

            <% Object.keys(trendingData).forEach(source => { %>
                <h2><%= source.toUpperCase() %> Trending</h2>
                <div class="container">
                    <% trendingData[source].forEach(media => { %>
                        <%- include('media', {
                            media: media,
                            source: source,
                            showAddButton: true,
                            addButtonCallback: 'showShelfModal'
                        }) %>
                    <% }); %>
                </div>
            <% }); %>
        </div>

        <!-- Modal for selecting a shelf -->
        <div id="shelfModal" class="modal">
            <div class="modal-content">
                <h3>Select a Shelf</h3>
                <div id="shelfOptionsContainer">
                    <% shelves.forEach(shelf => { %>
                        <div class="shelf-option" onclick="addToShelf(selectedContentId, selectedSource, '<%= shelf.name %>', selectedMediaType)">
                            <%= shelf.name %>
                        </div>
                    <% }) %>
                </div>
                <div style="margin-top: 20px;">
                    <button class="cancel-btn" onclick="closeShelfModal()">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let selectedContentId = null;
        let selectedSource = null;
        let selectedMediaType = null;

        function showShelfModal(contentId, source, media_type) {
            selectedContentId = contentId;
            selectedSource = source;
            selectedMediaType = media_type;
            document.getElementById("shelfModal").style.display = "flex";
        }

        function closeShelfModal() {
            selectedContentId = null;
            selectedSource = null;
            selectedMediaType = null;
            document.getElementById("shelfModal").style.display = "none";
        }

        async function addToShelf(external_id, source, shelf, content_type) {
            try {
                const response = await fetch("/p/api/shelf/content/add", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ external_id, source, shelf, content_type })
                });

                if (response.ok) {
                    alert("Added to shelf successfully!");
                    closeShelfModal();
                } else {
                    const result = await response.json();
                    alert("Failed to add to shelf: " + result.message);
                }
            } catch (error) {
                console.error("Error adding to shelf:", error);
                alert("An error occurred while adding to shelf.");
            }
        }

        document.addEventListener("DOMContentLoaded", () => {
            closeShelfModal();
        });
    </script>
</body>
</html>

