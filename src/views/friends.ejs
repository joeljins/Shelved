<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Friends</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      background-color: #121212;
      color: #ffffff;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    .page-content {
      flex: 1;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 20px;
    }

    .main-container {
      background-color: #1e1e1e;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0,0,0,0.5);
      width: 80%;
      max-width: 800px;
    }

    .tabs {
      display: flex;
      margin-bottom: 20px;
      border-bottom: 1px solid #444444;
    }

    .tab {
      padding: 10px 20px;
      cursor: pointer;
      color: #cccccc;
      border-bottom: 2px solid transparent;
      margin-right: 20px;
    }

    .tab.active {
      color: #ff6600;
      border-bottom: 2px solid #ff6600;
    }

    .tab-content {
      display: none;
    }

    .tab-content.active {
      display: block;
    }

    #searchForm {
      display: flex;
      margin-bottom: 20px;
      gap: 10px;
    }

    #searchInput {
      flex: 1;
      padding: 10px;
      border: 1px solid #444444;
      border-radius: 4px;
      background-color: #333333;
      color: #ffffff;
    }

    #searchForm button {
      padding: 10px 20px;
      border: none;
      background-color: #ff6600;
      color: white;
      cursor: pointer;
      border-radius: 4px;
    }

    #searchForm button:hover {
      background-color: #e65c00;
    }

    .user-list {
      display: flex;
      flex-direction: column;
      gap: 15px;
    }

    .user-card {
      background-color: #2e2e2e;
      padding: 15px;
      border-radius: 8px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-shadow: 0 0 10px rgba(0,0,0,0.3);
    }

    .user-info {
      display: flex;
      align-items: center;
      gap: 15px;
    }

    .user-avatar {
      width: 40px;
      height: 40px;
      background-color: #ff6600;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 18px;
      font-weight: bold;
    }

    .user-details h3 {
      margin: 0;
      color: #ff6600;
    }

    .user-details p {
      margin: 5px 0 0;
      color: #cccccc;
      font-size: 14px;
    }

    .follow-btn {
      padding: 8px 16px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-weight: bold;
      transition: all 0.3s ease;
    }

    .follow-btn.following {
      background-color: #2e2e2e;
      color: #cccccc;
      border: 1px solid #cccccc;
    }

    .follow-btn.not-following {
      background-color: #ff6600;
      color: white;
    }

    .spinner {
      border: 4px solid rgba(255, 255, 255, 0.3);
      border-radius: 50%;
      border-top: 4px solid #ffffff;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
      display: none;
      margin: 20px auto;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    <%- include('static/css/main.css') %>
    <%- include('static/css/profile.css') %>
    <%- include('static/css/media.css') %>
  </style>
</head>
<body>
  <%- include('navbar', { username }) %>
  
  <div class="page-content">
    <div class="main-container">
      <div class="tabs">
        <div class="tab active" data-tab="search">Find Users</div>
        <div class="tab" data-tab="followers">Followers (<%= followers.length %>)</div>
        <div class="tab" data-tab="following">Following (<%= following.length %>)</div>
      </div>

      <div class="tab-content active" id="search">
        <form id="searchForm">
          <input type="text" id="searchInput" placeholder="Search by username..." required>
          <button type="submit">Search</button>
        </form>

        <div class="spinner" id="spinner"></div>
        <div id="resultsContainer"></div>
      </div>

      <div class="tab-content" id="followers">
        <div class="user-list">
          <% followers.forEach(function(follower) { %>
            <div class="user-card">
              <div class="user-info">
                <div class="user-avatar"><%= follower[0].toUpperCase() %></div>
                <div class="user-details">
                  <h3>@<%= follower %></h3>
                </div>
              </div>
            </div>
          <% }); %>
        </div>
      </div>

      <div class="tab-content" id="following">
        <div class="user-list">
          <% following.forEach(function(followedUser) { %>
            <div class="user-card">
              <div class="user-info">
                <div class="user-avatar"><%= followedUser[0].toUpperCase() %></div>
                <div class="user-details">
                  <h3>@<%= followedUser %></h3>
                </div>
              </div>
            </div>
          <% }); %>
        </div>
      </div>
    </div>
  </div>
<script>
    const currentUsername = '<%= username %>';

    async function followUser(username, buttonElement) {
      try {
        const response = await fetch('/p/api/friends/follow', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            followingUsername: username
          })
        });

        const result = await response.json();
        
        if (result.success) {
          buttonElement.textContent = 'Following';
          buttonElement.classList.remove('not-following');
          buttonElement.classList.add('following');
        } else {
          console.error('Failed to follow:', result.error);
        }
      } catch (error) {
        console.error('Error following user:', error);
      }
    }

    async function checkFollowStatus(username) {
      try {
        const response = await fetch(`/p/api/friends/following`);
        const result = await response.json();
        
        if (result.success) {
          return result.following.some(user => user === username);
        }
        return false;
      } catch (error) {
        console.error('Error checking follow status:', error);
        return false;
      }
    }

    document.getElementById("searchForm").addEventListener("submit", async function (event) {
      event.preventDefault();

      const username = document.getElementById("searchInput").value;
      const spinner = document.getElementById("spinner");
      const resultsContainer = document.getElementById("resultsContainer");

      spinner.style.display = "block";
      resultsContainer.innerHTML = "";

      try {
        const response = await fetch(`/p/api/friends/search?username=${username}`);
        const results = await response.json();

        for (const user of results) {
          const isFollowing = await checkFollowStatus(user.username);
          
          const card = document.createElement("div");
          card.className = "user-card";
          card.innerHTML = `
            <div class="user-info">
              <div class="user-avatar">${user.username[0].toUpperCase()}</div>
              <div class="user-details">
                <h3>@${user.username}</h3>
                <p>Joined ${new Date(user.created_at).toLocaleDateString()}</p>
              </div>
            </div>
            ${currentUsername !== user.username ? `
              <button class="follow-btn ${isFollowing ? 'following' : 'not-following'}">
                ${isFollowing ? 'Following' : 'Follow'}
              </button>
            ` : ''}
          `;

          const followBtn = card.querySelector('.follow-btn');
          if (followBtn && !isFollowing) {
            followBtn.addEventListener('click', () => followUser(user.username, followBtn));
          }

          resultsContainer.appendChild(card);
        }
      } catch (error) {
        console.error("Error fetching search results:", error);
        resultsContainer.innerHTML = '<p>Error fetching results. Please try again.</p>';
      } finally {
        spinner.style.display = "none";
      }
    });

    document.querySelectorAll('.tab').forEach(tab => {
      tab.addEventListener('click', () => {
        document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
        document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
        
        tab.classList.add('active');
        document.getElementById(tab.dataset.tab).classList.add('active');
      });
    });
  </script>
</body>
</html>
